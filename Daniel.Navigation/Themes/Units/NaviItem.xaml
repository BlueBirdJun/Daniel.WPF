<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:james="clr-namespace:Jamesnet.Wpf.Controls;assembly=Jamesnet.Wpf"
                    xmlns:cnvts="clr-namespace:Daniel.WPF.Support.Local.Converters;assembly=Daniel.WPF.Support"
                    xmlns:units="clr-namespace:Daniel.Navigation.UI.Units">
    <Style TargetType="{x:Type units:NaviItem}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <!--<Setter Property="IsExpanded" Value="{Binding IsFolderExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding IsFolderSelected}"/>-->
        <Setter Property="ItemsSource" Value="{Binding Children}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type units:NaviItem}">
                    <Border Padding="0 0 0 0">
                        <james:JamesGrid Rows="Auto, Auto" Columns="*">
                            <Border x:Name="item" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="#313131"
                                    BorderThickness="0 0 0 0"
                                    Padding="{Binding Depth, Converter={cnvts:DepthConverter}}"
                                    >
                                <james:JamesGrid Rows="*" 
                                  Columns="Auto, Auto, *" 
                                  Margin="0 4 0 4">
                                    <units:ExpandButton x:Name="expand"
                                 Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsFolderExpanded, Mode=OneWay}"/>
                                    <james:JamesIcon x:Name="icon" 
                    Icon="{Binding IconType}"
                    Width="16" Height="16" 
                    Margin="4 2 4 2" 
                    Fill="{TemplateBinding Foreground}"/>

                                    <TextBlock x:Name="text"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{Binding Title}"
                                Margin="0 0 30 0"
                                TextTrimming="CharacterEllipsis"
                                VerticalAlignment="Center"/>
                                </james:JamesGrid>
                            </Border>
                            <ItemsPresenter x:Name="items" Grid.Row="1" Visibility="Collapsed"/>
                        </james:JamesGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsDenied}" Value="True">
                            <Setter TargetName="icon" Property="Opacity" Value="0.3"/>
                            <Setter TargetName="text" Property="Opacity" Value="0.3"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="items" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=expand, Path=IsChecked}" Value="True">
                            <Setter TargetName="items" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=expand, Path=IsChecked}" Value="False">
                            <Setter TargetName="items" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFE26285"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>